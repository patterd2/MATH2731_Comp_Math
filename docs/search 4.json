[
  {
    "objectID": "chap-five.html",
    "href": "chap-five.html",
    "title": "5  Differential Equations",
    "section": "",
    "text": "5.1 Basic Concepts\n$$ \\def\\eb{\\boldsymbol{e}} \\def\\fb{\\boldsymbol{f}} \\def\\hb{\\boldsymbol{h}} \\def\\xb{\\boldsymbol{x}} \\def\\Rb{\\boldsymbol{R}} \\def\\Real{\\mathbb{R}} \\def\\bfzero{\\boldsymbol{0}} \\newcommand{\\ddy}[2]{\\frac{\\partial{#1}}{\\partial{#2}}} $$\nAlmost all differential equations which arise in mathematics and its applications do not have exact analytical solutions. This is a central motivation for numerical analysis, as well as the historical development of increasingly powerful computers. Most scientific computing languages have pre-built packages for solving differential equations quickly and accurately using numerical approximations, and there are entire classes of software packages designed to do this for specialised industries, such as aerospace or finance. The goal of this Chapter is to understand the fundamentals of numerical timestepping, so that you can understand properties of these numerical methods, and hence so you can choose which to use for a given problem.\nWe will focus on general systems of (n) first-order differential equations of the form \\[\n\\dot{\\mathbf{u}} = \\frac{\\mathrm{d}\\mathbf{u}}{\\mathrm{d}t} = \\mathbf{f}(t,\\mathbf{u}), \\quad \\mathbf{u}(t_0)=\\mathbf{u}_0 \\in \\mathbb{R}^n.\n\\] Many general classes of equations can be written in this form, and such systems also arise when discretising partial differential equations, as well as other kinds of models involving derivatives. When ((t,)=()) (i.e. does not depend on time) we call the system autonomous.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Differential Equations</span>"
    ]
  },
  {
    "objectID": "chap-five.html#basic-concepts",
    "href": "chap-five.html#basic-concepts",
    "title": "5  Differential Equations",
    "section": "",
    "text": "5.1.0.1 Preliminary ODE theory\nBefore discussing practical aspects of solving such equations, recall the basic existence and uniqueness theory. For ODEs this theory is not too complicated, provided the right-hand side is sufficiently well behaved.\n\nTheorem 5.1Picard–Lindelöf theorem.\nLet (^n) be an open rectangle with interior point ((t_0,_0)). Suppose (:^n) is continuous in (t) and Lipschitz continuous in () for all ((t,)). Then there exists (&gt;0) such that the initial-value problem above has a unique solution ((t)) for (t).\n\n\nEssentially, this says that if () is sufficiently nice then the ODE has a unique solution for each initial condition. The result follows from the contraction-mapping theorem or via an iterative scheme. If () is globally Lipschitz (same Lipschitz constant for all (^n)) and continuous for all (t), then the solution exists for all (t). For autonomous systems, solution curves ((t)^n) cannot cross.\nWhile this is theoretical, the theorem is important: there are ODEs without solutions or with non-unique solutions, and for PDEs existence and uniqueness are often much harder (and can fail).\n\nExample 5.1\nThe ODE [ = , u(0)=(0)=0, ] equivalently the first-order system [ =v,=,u(0)=v(0)=0, ] is a classical example with non-unique solutions. For any (T&gt;0) there are infinitely many solutions given by [ u(t)=\n\\[\\begin{cases}\n0 & t&lt;T,\\\\[4pt]\n\\frac{1}{144}(t-T)^4 & t\\ge T,\n\\end{cases}\\]\n] in addition to the trivial solution (u(t)=0). This example (Norton’s Dome) has an interpretation in Newtonian mechanics that breaks causality, since the particle can spontaneously start moving after an arbitrary time. See https://arxiv.org/abs/1801.01719v3.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Differential Equations</span>"
    ]
  }
]